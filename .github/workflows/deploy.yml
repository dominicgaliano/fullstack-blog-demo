name: Build and Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: deploy

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3


      - name: Build project
        run: |
          cd client/
          npm install ci
          cd ..
          npm run build:client
          cp -r client/dist server/public

      - name: Create .env file
        run: |
          cd fullstack-blog-demo/
          echo "CLIENT_DOMAIN=${{ secrets.EC2_HOST }}" > .env
          echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
          echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
      
      - name: Setup ssh-agent
        uses: webfactory/ssh-agent@v0.8.0 
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Push build to EC2 instance 
        run: |
          rsync -avz --exclude "configuration" -e "ssh -o StrictHostKeyChecking=no" -p ./ ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/fullstack-blog-demo

      - name: Run Docker Compose Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd fullstack-blog-demo/
            sudo docker compose -f compose.yml -f production.yml up --build -d
